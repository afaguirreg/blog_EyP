#include <LiquidCrystal.h>
#include <OneWire.h>

const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

OneWire  ds(A0);  // on pin 10 (a 4.7K resistor is necessary)

void setup() {
  // put your setup code here, to run once:
  pinMode(10, OUTPUT);
  digitalWrite(10, HIGH);
  lcd.begin(16, 2);
  delay(200);
  lcd.print("Temp:");
}

void loop() {
  // put your main code here, to run repeatedly:
  byte i;
  byte present = 0;
  byte type_s;
  byte data[12];
  byte addr[8];
  float temp;
  char grados = 223;
  
  if ( !ds.search(addr)) {
    ds.reset_search();
    delay(250);
    return;
  }
  
  if (OneWire::crc8(addr, 7) != addr[7]) {
      return;
  }
  Serial.println();
 
  // the first ROM byte indicates which chip
  switch (addr[0]) {
    case 0x10:
      //Chip = DS18S20
      type_s = 1;
      break;
    case 0x28:
      //Chip = DS18B20
      type_s = 0;
      break;
    case 0x22:
      //Chip = DS1822
      type_s = 0;
      break;
    default:
      //Device is not a DS18x20 family device
      return;
  } 

  ds.reset();
  ds.select(addr);
  ds.write(0x44, 1);
  
  delay(1000);

  present = ds.reset();
  ds.select(addr);    
  ds.write(0xBE);

  for ( i = 0; i < 9; i++) {
    data[i] = ds.read();
  }

  int16_t raw = (data[1] << 8) | data[0];
  if (type_s) {
    raw = raw << 3;
    if (data[7] == 0x10) {
      raw = (raw & 0xFFF0) + 12 - data[6];
    }
  } else {
    byte cfg = (data[4] & 0x60);
    if (cfg == 0x00) raw = raw & ~7;
    else if (cfg == 0x20) raw = raw & ~3;
    else if (cfg == 0x40) raw = raw & ~1;
  }

  temp = (float)raw / 16.0;
  lcd.setCursor(6,0);
  lcd.print(temp,1);
  lcd.print((char)grados);
  lcd.print("C ");
}