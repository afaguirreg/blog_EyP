#include <LiquidCrystal.h>

const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

char txt2stream[10];

void setup() {
  // put your setup code here, to run once:
  pinMode(10, OUTPUT);
  digitalWrite(10, HIGH);
  lcd.begin(20,4);
  delay(200);
}

void loop() {
  // put your main code here, to run repeatedly:
  lcd.setCursor(0,0);
  lcd.print("Linea 1");
  delay(1000);
  lcd.setCursor(0,1);
  lcd.print("Linea 2");
  delay(1000);
  lcd.setCursor(0,2);
  lcd.print("Linea 3");
  delay(1000);
  lcd.setCursor(0,3);
  lcd.print("Linea 4");
  delay(1000);

  // clear screen:
  lcd.clear();

  byte thisChar;
  // set the cursor to (10,0):
  lcd.setCursor(10, 0);
  // print from 0 to 9:
  for (thisChar = 0; thisChar < 10; thisChar++) {
     sprintf(txt2stream,"%u",thisChar);
     lcd.print(txt2stream);
     delay(500);
  }

  // set the cursor to (10,1):
  lcd.setCursor(10, 1);
  // set the display to automatically scroll:
  lcd.autoscroll();
  // print from 0 to 9:
  for (thisChar = 0; thisChar < 10; thisChar++) {
    sprintf(txt2stream,"%u",thisChar);
    lcd.print(txt2stream);
    delay(500);
  }

  // turn off automatic scrolling
  lcd.noAutoscroll();
  delay(1000);

  // clear screen:
  lcd.clear();

  // Print a message to the LCD.
  lcd.print("blink");
  // Turn off the blinking cursor:
  lcd.blink();
  delay(2000);
  // clear screen:
  lcd.clear();
  // Print a message to the LCD.
  lcd.print("noBlink");
  // Turn on the blinking cursor:
  lcd.noBlink();
  delay(2000);

  // clear screen:
  lcd.clear();

  // Print a message to the LCD.
  lcd.print("cursor");
  // Turn on the blinking cursor:
  lcd.cursor();
  delay(2000);
  // clear screen:
  lcd.clear();
  // Print a message to the LCD.
  lcd.print("noCursor");
  // Turn off the blinking cursor:
  lcd.noCursor();
  delay(2000);

  // clear screen for the next loop:
  lcd.clear();

  // Print a message to the LCD.
  lcd.print("display");
  // Turn on the display:
  lcd.display();
  delay(2000);
  // Turn off the display:
  lcd.noDisplay();
  delay(2000);
  lcd.display();
  delay(2000);

  // clear screen for the next loop:
  lcd.clear();

  lcd.setCursor(12,0);
  // Print a message to the LCD.
  lcd.print("Izquierda");

  byte positionCounter;
  // scroll 12 positions (string length) to the left
  // to move it offscreen left:
  for (positionCounter = 0; positionCounter < 12; positionCounter++) {
    // scroll one position left:
    lcd.scrollDisplayLeft();
    // wait a bit:
    delay(250);
  }

  delay(1000);
  // set the cursor to (0,0):
  lcd.home();
  // clear screen:
  lcd.clear();

  // Print a message to the LCD.
  lcd.print("Derecha");

  // scroll 13 positions (string length + display length) to the right
  // to move it offscreen right:
  for (positionCounter = 0; positionCounter < 13; positionCounter++) {
    // scroll one position right:
    lcd.scrollDisplayRight();
    // wait a bit:
    delay(250);
  }

  delay(1000);
  // clear screen:
  lcd.clear();

  lcd.leftToRight();
  for (thisChar = 65; thisChar < 85; thisChar++) {
    sprintf(txt2stream,"%c",thisChar);
    // print the character
    lcd.print(txt2stream);
    delay(250);
  }

  lcd.setCursor(19,0);
  lcd.rightToLeft();   
  for (thisChar = 97; thisChar < 117; thisChar++) {
    sprintf(txt2stream,"%c",thisChar);
    // print the character
    lcd.print(txt2stream);
    delay(250);
  }

  delay(1000);
  // clear screen for the next loop:
  lcd.clear();
}
